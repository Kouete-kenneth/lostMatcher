# Alternative Dockerfile using Alpine Linux for better network connectivity
FROM python:3.9-alpine

# Set working directory in container
WORKDIR /app

# Install system dependencies for OpenCV
RUN apk update && apk add --no-cache \
    build-base \
    cmake \
    openblas-dev \
    unzip \
    wget \
    curl \
    # OpenCV dependencies
    opencv-dev \
    py3-opencv \
    # Additional dependencies
    glib-dev \
    gtk+3.0-dev \
    mesa-gl \
    && rm -rf /var/cache/apk/*

# Copy requirements first to leverage Docker cache
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Create uploads directory
RUN mkdir -p uploads

# Expose port
EXPOSE 5000

# Set environment variables
ENV FLASK_APP=app.py
ENV FLASK_ENV=production
ENV PYTHONUNBUFFERED=1

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Run the application
CMD ["python", "app.py"]
